services:
  api:
    image: node:22-alpine3.19
    ports:
      - 3000:3000
    volumes:
      - ./api:/app:ro
    networks:
      - network_frontend
      - network_backend
    command: ["node", "/app/index.js"]
    depends_on:
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build:
      context: ./app
      dockerfile: dockerfile
    image: pokemon_app:1.0.0
    ports:
      - 8080:80
    volumes:
      - ./app:/app:ro
    networks:
      - network_frontend

  db:
    image: mysql:8.0.39
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=pokemon
      - MYSQL_ALLOW_EMPTY_PASSWORD='yes'
    volumes:
      - db_data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - network_backend
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  proxy:
    image: nginx:1.27.2-alpine
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - network_frontend
      - network_backend
    ports:
      - 80:80
    command: ["/bin/sh", "-c", "rm /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
    depends_on:
      - api
      - web

volumes:
  db_data:
networks:
  network_frontend:
  network_backend: